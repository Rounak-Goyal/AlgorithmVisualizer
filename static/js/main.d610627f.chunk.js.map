{"version":3,"sources":["pathfinderComponents/node.jsx","pathfinderComponents/grid.jsx","pathfinderComponents/simpleSelect.jsx","pathfinderComponents/navbar.jsx","pathfinderComponents/menu.jsx","algorithms/dijkstra.js","algorithms/recursiveMaze.js","algorithms/bfs.jsx","pathfinderComponents/pathfinder.jsx","algorithms/randomMaze.js","homeComponents/navbar.jsx","homeComponents/greet.jsx","homeComponents/images/graph.png","homeComponents/card.jsx","homeComponents/card2.jsx","homeComponents/sort.png","homeComponents/images/binaryTree.png","homeComponents/cards.jsx","homeComponents/cardDetails.js","homeComponents/footer.jsx","homeComponents/home.jsx","sortComponents/rect.jsx","sortComponents/rects.jsx","algorithms/sortingAlgorithms.js","algorithms/quickSort.js","sortComponents/navbar.jsx","sortComponents/slider.jsx","sortComponents/simpleSelect.jsx","sortComponents/airBnbSlider.jsx","sortComponents/doubleSlider.jsx","sortComponents/formControlLabel.jsx","sortComponents/menu.jsx","sortComponents/sort.js","binarySearchComponent/entryPoint.jsx","binarySearchComponent/doubleSlider.jsx","binarySearchComponent/guess.jsx","binarySearchComponent/result.jsx","binarySearchComponent/search.jsx","binarySearchComponent/navbar.jsx","binarySearchComponent/binarySearch.jsx","recursiveSortComponents/rect.jsx","recursiveSortComponents/rects.jsx","algorithms/mergeSort.js","algorithms/heapSort.js","algorithms/quickSortRecursive.js","recursiveSortComponents/navbar.jsx","recursiveSortComponents/slider.jsx","recursiveSortComponents/simpleSelect.jsx","recursiveSortComponents/airBnbSlider.jsx","recursiveSortComponents/doubleSlider.jsx","recursiveSortComponents/menu.jsx","recursiveSortComponents/recursiveSort.js","App.js","reportWebVitals.js","index.js"],"names":["Node","static","row","props","col","this","onMouseDown","isVisited","onMouseEnter","onMouseUp","id","className","getClassName","node","isWall","isStartNode","isEndNode","ispathNode","Component","Grid","state","grid","map","rowidx","nodeidx","visitedNode","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SimpleSelect","classes","React","useState","age","setAge","FormControl","InputLabel","Select","labelId","value","onChange","event","target","onAlgoChanged","items","item","itemidx","MenuItem","Navbar","type","to","style","color","Menu","algorithms","onMazeChanged","mazes","onClick","onCreateMaze","onVisualize","onClearPath","onClearBoard","dijkstra","startNode","finishNode","visitedNodesInOrder","distance","unvisitedNodes","nodes","push","getAllNodes","length","sortNodesByDistance","closestNode","shift","Infinity","updateUnvisitedNeighbors","sort","nodeA","nodeB","unvisitedNeighbors","neighbors","filter","neighbor","getUnvisitedNeighbors","previousNode","decideMaze","pairs","board","startRow","endRow","startCol","endCol","mid","Math","floor","random","start","end","i","xx","yy","recursiveMazeVertical","recursiveMazeHorizontal","bfsdfs","endNode","algo","list","nodesInOrder","currentNode","pop","nodesToPush","getNeighbours","Pathfinder","handleMouseDown","newGrid","getNewGridWithWallToggled","setState","mouseIsPressed","handleMouseEnter","handleMouseUp","handleAlgoChanged","val","handleMazeChanged","maze","handleCreateMaze","newBoard","slice","j","randomMaze","getMaze","setTimeout","document","getElementById","handleClearBoard","clearBoard","handleClearPath","clearPath","handleClick","visualizeDijkstra","width","window","innerWidth","height","innerHeight","max","getInitialGrid","textAlign","nodesInShortestPathOrder","unshift","getNodesInShortestPathOrder","animateDijkstra","sleep","animateShortestPath","toggleVisit","newNode","totRow","totCol","currentRow","createNode","ms","Promise","resolve","href","Greet","card","maxWidth","minHeight","borderRadius","boxShadow","media","actionArea","padding","transition","transform","expand","marginLeft","transitions","create","duration","shortest","expandOpen","ImgMediaCard2","expanded","setExpanded","CardActionArea","m","Card","route","CardMedia","component","alt","title","src","img","CardHeader","backgroundColor","action","IconButton","clsx","Collapse","in","timeout","unmountOnExit","CardContent","Typography","description","Cards","cards","getData","e","console","log","graph","binSearch","Fragment","TextField","label","toLowerCase","includes","Footer","class","Home","Rect","checkColor","rect","isSorted","isSorting","background","marg","Rects","rects","speed","rectidx","kk","selectionSort","arr","n","prevRect","min_idx","changed","recti","rectj","bubbleSort","insertionSort","key","values","quickSort","rects2","sz","quick","left","right","partition","pivot","it","rect1","rect2","getPartition","root","valuetext","DiscreteSlider","Slider","defaultValue","default","getAriaValueText","valueLabelDisplay","onChangeCommitted","innerText","num","parseInt","onCountChange","step","min","disable","gutterBottom","pos","selected","withStyles","thumb","border","marginRight","active","track","rail","opacity","CSlider","RangeSlider","setValue","disabled","newValue","SwitchLabels","checkedA","FormGroup","FormControlLabel","control","Switch","checked","name","onDoubleChange","isClickable","cursor","onRandomize","onSpeedChange","onViusalize","Sort","count","doubles","isRunning","isRunning1","isRunning2","algo1","algo2","handleRandomize","getInitialRects","handleRefresh","handleDouble","handleCountChange","handleSpeedChanged","handleSort","steps1","steps2","handleFirst","handleSecond","steps","onRefresh","tot","getRect","EntryPoint","error","setUpper","validateNumbers","variant","upper","startGame","lower","useEffect","Guess","getMid","justifyContent","yesButton","noButton","Result","res","onRestart","Search","BinarySearch","handleStartGame","handleRestart","handleYes","handleNo","handleSetUpper","up","isLeft","isRight","checkBorder","isRange","mergeSort","mergeS","l","r","n1","n2","L","R","k","merge","HeapSort","heapify","temp","sorted","heapSort","largest","quickSortRecursive","swap","changedRange","RecursiveSort","handleMerge","handleHeap","handleQuick","hasChanged","ii","App","basename","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d610627f.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './node.css'\nclass Node extends Component {\n    static = {\n        row: this.props.row,\n        col: this.props.col\n    }\n    render() {\n        const { row,col,isVisited, onMouseDown, onMouseEnter,onMouseUp } = this.props;\n        return (\n            <div\n                id = {`node-${this.props.row}-${this.props.col}`}\n                className={this.getClassName()}\n                onMouseDown={() => onMouseDown(row,col)}\n                onMouseEnter={() => onMouseEnter(row,col)}\n                onMouseUp={() => onMouseUp(row,col)}\n            />\n        );\n    }\n    getClassName(){\n        if(this.props.node.isWall === true){\n            return \"node node-wall\";\n        } else if( this.props.node.isStartNode === true ){\n            return \"node  node-start\";\n        } else if( this.props.node.isEndNode === true ){\n            return \"node  node-end\";\n        } else if(this.props.node.ispathNode){\n            return 'node node-shortest-path';\n        }else if( this.props.node.isVisited === true ){\n            return \"node  node-visited\";\n        } else{\n            return \"node\";\n        }\n    }\n}\n\nexport default Node;","import React, {Component} from 'react';\nimport Node from \"./node\";\nimport './grid.css';\nclass Grid extends Component {\n    state = {\n        grid: this.props.grid\n    }\n\n    render() {\n        return (\n            <div className=\"Grid\">\n                {this.props.grid.map((row, rowidx) => {\n                    return (\n                        <div key={rowidx}>\n                            {row.map((node, nodeidx) => {\n                                const {row, col, isWall, visitedNode, } = node;\n                                return (\n                                    <Node\n                                        key={nodeidx}\n                                        row={row}\n                                        col={col}\n                                        node={node}\n                                        isWall={isWall}\n                                        visitedNode={ visitedNode }\n                                        onMouseDown = {this.props.onMouseDown}\n                                        onMouseEnter = {this.props.onMouseEnter}\n                                        onMouseUp = {this.props.onMouseUp}\n                                    />\n                                );\n                            })}\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default Grid;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n\n    const handleChange = (event) => {\n        setAge(event.target.value);\n        props.onAlgoChanged(event.target.value);\n    };\n\n    return (\n        <div>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    {props.items.map( (item,itemidx)=>{\n                        return(\n                            <MenuItem\n                                key={itemidx}\n                                value={itemidx}>{item}</MenuItem>\n                        );\n                    } )}\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React, {Component} from 'react';\nimport SimpleSelect from \"./simpleSelect\";\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Pathfinder</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\nimport SimpleSelect from \"./simpleSelect\";\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\" >\n                <SimpleSelect\n                    onAlgoChanged = {this.props.onAlgoChanged}\n                    items={this.props.algorithms}\n                />\n                <SimpleSelect\n                    onAlgoChanged={this.props.onMazeChanged}\n                    items={this.props.mazes}\n                />\n                <button\n                    className='btn btn-lg btn-secondary m-2'\n                    onClick={this.props.onCreateMaze}>\n                    Create Maze\n                </button>\n                <button\n                    onClick={this.props.onVisualize}\n                    className=\"btn btn-warning btn-lg\"\n                >Visualize</button>\n                <button\n                    onClick={this.props.onClearPath}\n                    className='btn btn-danger btn-lg m-2'>Clear Path</button>\n                <button\n                    onClick={this.props.onClearBoard}\n                    className='btn btn-danger btn-lg m-2'>Clear Board</button>\n            </nav>\n        );\n    }\n}\n\nexport default Menu;","// Performs Dijkstra's algorithm; returns *all* nodes in the order\n// in which they were visited. Also makes nodes point back to their\n// previous node, effectively allowing us to compute the shortest path\n// by backtracking from the finish node.\nexport function dijkstra(grid, startNode, finishNode) {\n  const visitedNodesInOrder = [];\n  startNode.distance = 0;\n  const unvisitedNodes = getAllNodes(grid);\n  while (!!unvisitedNodes.length) {\n    sortNodesByDistance(unvisitedNodes);\n    const closestNode = unvisitedNodes.shift();\n    // If we encounter a wall, we skip it.\n    if (closestNode.isWall) continue;\n    // If the closest node is at a distance of infinity,\n    // we must be trapped and should therefore stop.\n    if (closestNode.distance === Infinity) return visitedNodesInOrder;\n    closestNode.isVisited = true;\n    visitedNodesInOrder.push(closestNode);\n    if (closestNode === finishNode) return visitedNodesInOrder;\n    updateUnvisitedNeighbors(closestNode, grid);\n  }\n}\n\nfunction sortNodesByDistance(unvisitedNodes) {\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\n}\n\nfunction updateUnvisitedNeighbors(node, grid) {\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\n  for (const neighbor of unvisitedNeighbors) {\n    neighbor.distance = node.distance + 1;\n    neighbor.previousNode = node;\n  }\n}\n\nfunction getUnvisitedNeighbors(node, grid) {\n  const neighbors = [];\n  const {col, row} = node;\n  if (row > 0) neighbors.push(grid[row - 1][col]);\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n  if (col > 0) neighbors.push(grid[row][col - 1]);\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n  return neighbors.filter(neighbor => !neighbor.isVisited);\n}\n\nfunction getAllNodes(grid) {\n  const nodes = [];\n  for (const row of grid) {\n    for (const node of row) {\n      nodes.push(node);\n    }\n  }\n  return nodes;\n}\n\n// Backtracks from the finishNode to find the shortest path.\n// Only works when called *after* the dijkstra method above.\nexport function getNodesInShortestPathOrder(finishNode) {\n  const nodesInShortestPathOrder = [];\n  let currentNode = finishNode;\n  while (currentNode !== null) {\n    nodesInShortestPathOrder.unshift(currentNode);\n    currentNode = currentNode.previousNode;\n  }\n  return nodesInShortestPathOrder;\n}\n","export function getMaze(board,row,col){\n    const pairs = [];\n    let newBoard = board.slice();\n    for( let i = 0;i <col;i++){\n        newBoard[0][i].isWall = true;\n        pairs.push({\n            xx:0,\n            yy:i\n        });\n    }\n    for( let i = 0;i <row;i++){\n        newBoard[i][col-1].isWall = true;\n        pairs.push({\n            xx:i,\n            yy:col-1\n        });\n    }\n    for( let i = col-1;i>=0;i-- ){\n        newBoard[row-1][i].isWall = true;\n        pairs.push({\n            xx:row-1,\n            yy:i\n        });\n    }\n    for(let i = row-1;i>=0;i--){\n        newBoard[i][0].isWall = true;\n        pairs.push({\n            xx:i,\n            yy:0\n        });\n    }\n    decideMaze(pairs,newBoard,1,row-2,1,col-2);\n    //console.log(\"here\");\n    return pairs;\n}\nlet val = 0;\n\nfunction decideMaze(pairs,board,startRow,endRow,startCol,endCol) {\n    //console.log(\"count\");\n    val++;\n\n    if( ((endRow-startRow) <=1) && ((endCol - startCol) <=1) ){\n        return;\n    }\n\n     if( (endCol - startCol) > (endRow - startRow) ){\n        recursiveMazeVertical(pairs,board,startRow,endRow,startCol,endCol);\n    } else{\n        recursiveMazeHorizontal(pairs,board,startRow,endRow,startCol,endCol);\n    }\n}\nfunction recursiveMazeVertical(pairs,board,startRow,endRow,startCol,endCol){\n    let mid = Math.floor((endCol+startCol)/2);\n    let random = Math.floor(Math.random() * (endRow-startRow+1)) + startRow;\n    //console.log( \"row \",random,\" \",startRow,\" \",endRow );\n    let start = startRow;\n    if( !board[startRow-1][mid].isWall ){\n        random = start;\n        start++;\n    }\n    let end = endRow;\n    if( !board[endRow+1][mid].isWall ){\n        random = end;\n        end--;\n    }\n    for(let i = start;i<=end;i++){\n        if( i!==random ){\n            board[i][mid].isWall = true;\n            pairs.push({\n                xx:i,\n                yy:mid\n            });\n        }\n    }\n    decideMaze(pairs,board,startRow,endRow,startCol,mid-1);\n    decideMaze(pairs,board,startRow,endRow,mid+1,endCol);\n}\nfunction recursiveMazeHorizontal(pairs,board,startRow,endRow,startCol,endCol){\n    let mid = Math.floor((endRow+startRow)/2);\n  //  console.log(\"mid: \",mid);\n    let random = Math.floor(Math.random() * (endCol-startCol+1)) + startCol;\n    let start = startCol;\n    if( !board[mid][startCol-1].isWall ){\n        random = start;\n        start++;\n    }\n    let end = endCol;\n    if( !board[mid][endCol+1].isWall ){\n        random = end;\n        end--;\n    }\n    for(let i = start;i<=end;i++){\n        if( i!==random ){\n            board[mid][i].isWall = true;\n            pairs.push({\n                xx:mid,\n                yy:i\n            });\n        }\n    }\n    decideMaze(pairs,board,startRow,mid-1,startCol,endCol);\n    decideMaze(pairs,board,mid+1,endRow,startCol,endCol);\n\n}","export function bfsdfs(grid,startNode,endNode,algo){\n    var list = [];\n    const nodesInOrder = [];\n    nodesInOrder.push(startNode);\n    list.push(startNode);\n    startNode.isVisited = true;\n    while(!!list.length){\n        const currentNode = (algo === \"bfs\" ? list.shift():list.pop());\n        nodesInOrder.push(currentNode);\n        if( currentNode === endNode ) return nodesInOrder;\n        if( algo === \"dfs\" ) currentNode.isVisited = true;\n        const nodesToPush = getNeighbours(grid,currentNode);\n        for( const node of nodesToPush ){\n            if(algo === \"bfs\"){\n                node.isVisited = true;\n            }\n            node.previousNode = currentNode;\n            list.push(node);\n\n        }\n    }\n    return nodesInOrder;\n}\n\nfunction getNeighbours(grid,node){\n    const neighbors = [];\n    const {col, row} = node;\n   // console.log(node);\n\n    if (col > 0) neighbors.push(grid[row][col - 1]);\n    if (row > 0) neighbors.push(grid[row - 1][col]);\n    if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n    if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n    return neighbors.filter(neighbor => (!neighbor.isVisited && !neighbor.isWall ));\n}","import React, {Component, Fragment} from 'react';\nimport Grid from \"./grid\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\nimport {dijkstra,getNodesInShortestPathOrder} from \"../algorithms/dijkstra\";\nimport {getMaze} from \"../algorithms/recursiveMaze\";\nimport {bfsdfs} from \"../algorithms/bfs\";\nimport {randomMaze} from \"../algorithms/randomMaze\";\n\nclass Pathfinder extends Component {\n    constructor() {\n        super();\n        this.state = {\n            grid:[],\n            mouseIsPressed:false,\n            algorithms:[\n                \"Dijsktra\",\"BFS\",\"DFS\"\n            ],\n            algo:0,\n            mazes:[\n                \"Recursive division\",\"Random\",\"Recursive Horizontal bias(NA)\",\"Recursive Vertical bias(NA)\"\n            ],\n            maze:0\n        }\n    }\n    componentDidMount() {\n        const width = window.innerWidth;\n        const height = window.innerHeight;\n        const row = Math.max(Math.floor(height/25)-7,10);\n        const col = Math.floor(width/25);\n        const startNode = {\n            row:4,\n            col:4\n        };\n        const endNode = {\n            row: row-5,\n            col: col-5\n        }\n        // console.log( endNode.row );\n        const grid = getInitialGrid(row,col);\n        grid[startNode.row][startNode.col].isStartNode = true;\n        grid[row-5][col-5].isEndNode = true;\n        this.setState({grid,row,col,startNode,endNode});\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Navbar/>\n\n                <Menu\n                    onAlgoChanged = {this.handleAlgoChanged}\n                    onVisualize = {this.handleClick}\n                    algorithms={this.state.algorithms}\n                    mazes={this.state.mazes}\n                    onMazeChanged={this.handleMazeChanged}\n                    onCreateMaze={this.handleCreateMaze}\n                    onClearBoard={this.handleClearBoard}\n                    onClearPath={this.handleClearPath}\n                />\n                <span style={{margin: 2}}/>\n                <div style={{textAlign:\"center\"}} >\n                    <Grid\n                        grid={this.state.grid}\n                        onMouseDown={this.handleMouseDown}\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseUp={this.handleMouseUp}\n                    />\n                </div>\n            </Fragment>\n        );\n    }\n\n    handleMouseDown = (row, col) => {\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\n            this.setState({grid:newGrid});\n        }\n        this.setState({mouseIsPressed: true});\n    }\n\n    handleMouseEnter = (row, col) => {\n        if (this.state.mouseIsPressed === false) return;\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\n            this.setState({grid:newGrid});\n        }\n    }\n\n    handleMouseUp = (row,col) => {\n        this.setState({mouseIsPressed: false});\n    }\n\n    handleAlgoChanged = (val) =>{\n        this.setState({algo:val});\n    }\n\n    handleMazeChanged = (val)=>{\n        this.setState({maze:val});\n    }\n\n    handleCreateMaze = () =>{\n        let pairs;\n        switch (this.state.maze){\n            case 1:\n                pairs= randomMaze(this.state.grid,this.state.row,this.state.col);\n                break;\n            default:\n                pairs= getMaze(this.state.grid,this.state.row,this.state.col);\n        }\n        const {startNode,endNode} = this.state;\n        for( let i = 0;i<pairs.length;i++ ){\n            setTimeout(()=>{\n                if( i === pairs.length-1 ){\n                   // this.setState({grid:this.state.grid});\n                    const grid = this.state.grid;\n                    grid[ startNode.row ][startNode.col]={...grid[ startNode.row ][startNode.col],isWall: false};\n                    grid[endNode.row][endNode.col]={...grid[endNode.row][endNode.col],isWall: false};\n                    this.setState({grid});\n                }\n                if((pairs[i].xx!==startNode.row || pairs[i].yy!==startNode.col) && (pairs[i].xx!==endNode.row || pairs[i].yy!==endNode.col) ){\n                    document.getElementById(`node-${pairs[i].xx}-${pairs[i].yy}`).className = \"node node-wall\";\n                }\n            },i*20);\n        }\n    }\n    handleClearBoard = ()=>{\n        const {grid,row,col} = this.state;\n        this.setState({grid:clearBoard(grid,row,col)});\n    }\n    handleClearPath = () =>{\n        const {grid,row,col} = this.state;\n        this.setState({grid:clearPath(grid,row,col)});\n    }\n    handleClick = () =>{\n      /*  for(let i = 0;i<20;i++){\n            for(let j = 0; j<50;j++){\n                document.getElementById(`node-${i}-${j}`).className = \"node\";\n            }\n        }*/\n        this.visualizeDijkstra();\n        /*for(let i = 0;i<this.state.row;i++){\n            for(let j = 0; j<this.state.col;j++){\n                setTimeout(()=>{\n                    const newGrid = toggleVisit(this.state.grid,i,j);\n                    this.setState({grid:newGrid});\n                    //document.getElementById(`node-${i}-${j}`).className = \"node node-visited\";\n                },100*(i+j)+j);\n            }\n        }*/\n    }\n\n    visualizeDijkstra() {\n        const {grid} = this.state;\n        const startNode = grid[this.state.startNode.row][this.state.startNode.col];\n        const finishNode = grid[this.state.endNode.row][this.state.endNode.col];\n        let visitedNodesInOrder;\n        switch (this.state.algo){\n            case 0:\n                visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\n                break;\n            case 1:\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"bfs\");\n                break;\n            default:\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"dfs\");\n        }\n        const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\n        this.animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\n    }\n    async animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder) {\n        for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n\n            if (i === visitedNodesInOrder.length) {\n              //  setTimeout(() => {\n                    await sleep(100);\n                    await this.animateShortestPath(nodesInShortestPathOrder);\n\n              //  }, 10 * (i+10));\n                return;\n            }\n           // setTimeout(() => {\n                const node = visitedNodesInOrder[i];\n                const newGrid = toggleVisit(this.state.grid,node.row,node.col);\n                //this.setState({grid:newGrid});\n                document.getElementById(`node-${node.row}-${node.col}`).className =\n                    'node node-visited';\n                await sleep(10);\n           // }, 10 * i);\n        }\n    }\n\n    async animateShortestPath(nodesInShortestPathOrder) {\n        const grid = this.state.grid;\n        const newGrid = grid.slice();\n        for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\n         //   setTimeout(() => {\n\n                const node = nodesInShortestPathOrder[i];\n                const newNode = {...newGrid[node.row][node.col],ispathNode:true};\n                newGrid[node.row][node.col] = newNode;\n                if( i === nodesInShortestPathOrder.length-1 ){\n                    this.setState({grid:newGrid});\n                }\n                document.getElementById(`node-${node.row}-${node.col}`).className =\n                    'node node-shortest-path';\n                await sleep(50);\n            //}, 50 * i);\n        }\n    }\n\n}\n\nconst clearPath = (grid,row,col)=>{\n    const newGrid = grid.slice();\n    for(let i = 0;i < row ; i++){\n        for( let j = 0;j < col; j++){\n            const node = newGrid[i][j];\n            const newNode = {\n                ...node,\n                distance:Infinity,\n                visitedNode: false,\n                isVisited:false,\n                ispathNode:false,\n                previousNode:null\n\n            };\n            newGrid[i][j] = newNode;\n        }\n    }\n    return newGrid;\n}\nconst clearBoard = (grid,row,col)=>{\n    const newGrid = grid.slice();\n    for(let i = 0;i < row ; i++){\n        for( let j = 0;j < col; j++){\n            const node = newGrid[i][j];\n            const newNode = {\n                ...node,\n                isWall: false,\n                distance:Infinity,\n                visitedNode: false,\n                isVisited:false,\n                ispathNode:false,\n                previousNode:null\n\n            };\n            newGrid[i][j] = newNode;\n        }\n    }\n    return newGrid;\n}\n\nconst toggleVisit = (grid,row,col) =>{\n    const newGrid = grid.slice();\n    const node = newGrid[row][col];\n    const newNode = {\n        ...node,\n        visitedNode: !node.visitedNode\n    };\n    newGrid[row][col] = newNode;\n    return newGrid;\n}\nconst getNewGridWithWallToggled = (grid, row, col) => {\n    const newGrid = grid.slice();\n    const node = newGrid[row][col];\n    const newNode = {\n        ...node,\n        isWall: true//!node.isWall,\n    };\n    newGrid[row][col] = newNode;\n    return newGrid;\n};\nconst getInitialGrid = (totRow,totCol) => {\n    const grid = [];\n    for (let row = 0; row < totRow; row++) {\n        const currentRow = [];\n        for (let col = 0; col < totCol; col++) {\n            currentRow.push(createNode(row,col));\n        }\n        grid.push(currentRow);\n    }\n    return grid;\n}\n\nconst createNode = (row,col)=>{\n    return {\n        row,\n        col,\n        isWall: false,\n        isStartNode:false,\n        isEndNode:false,\n        distance:Infinity,\n        visitedNode: false,\n        isVisited:false,\n        ispathNode:false,\n        previousNode:null\n    };\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default Pathfinder;","export function randomMaze(board,row,col){\n    let newBoard = board.slice();\n    const pairs = [];\n    for(let i = 0;i<row;i++){\n        for( let j = 0;j <col;j++){\n            const random = Math.floor(Math.random()*100)+10;\n            if( random%4 === 0 ){\n                newBoard[i][j].isWall = true;\n                pairs.push({\n                    xx:i,\n                    yy:j\n                });\n            }\n        }\n    }\n    return pairs;\n}","import React, {Component} from 'react';\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark \">\n                <a className=\"navbar-brand\" href=\"#\">Algorithm Visualizer</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item active\">\n                            <a className=\"nav-link\" href=\"#\">About <span className=\"sr-only\">(current)</span></a>\n                        </li>\n\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\nimport \"./style.css\"\nclass Greet extends Component {\n    render() {\n        return (\n            <div className=\"greet\">\n                <h1 className=\"display-3\">\n                    Algorithm Visualizer\n                </h1>\n                <hr className=\"dropdown-divider\"/>\n                <h1 className=\"display-5\">\n                    Visualize Every algorithms\n                </h1>\n            </div>\n        );\n    }\n}\n\nexport default Greet;","export default __webpack_public_path__ + \"static/media/graph.6e6849d5.png\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport Collapse from '@material-ui/core/Collapse';\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport \"./style.css\";\nimport \"./images/graph.png\";\nimport {ExpandMore} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles({\n    card: {\n        minWidth: 350,\n        maxWidth:350,\n        minHeight:250,\n        borderRadius: 5,\n        '&:hover': {\n            boxShadow: `0 6px 12px 0 #000000\n                .rotate(-12)\n                .darken(0.2)\n                .fade(0.5)}`\n                ,\n        },\n    },\n    media: {\n        height: 140\n    },\n    actionArea: {\n        padding:15,\n        transition: '0.2s',\n        '&:hover': {\n            transform: 'scale(1.1)',\n\n        },\n    },\n});\n\nexport default function ImgMediaCard(props) {\n    const classes = useStyles();\n\n    return (\n        <CardActionArea className={classes.actionArea} m={20}>\n            <Card\n                className={classes.card}\n                >\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Contemplative Reptile\"\n                    height=\"140\"\n                    src={props.card.img}\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\"  >\n                        {props.card.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {props.card.description}\n                    </Typography>\n                    <ExpandMore/>\n                </CardContent>\n            </Card>\n        </CardActionArea>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport Collapse from '@material-ui/core/Collapse';\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport \"./style.css\";\nimport \"./images/graph.png\";\nimport {ExpandMore} from \"@material-ui/icons\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        minWidth: 350,\n        maxWidth:350,\n        minHeight:200,\n        borderRadius: 5,\n        '&:hover': {\n            boxShadow: `0 6px 12px 0 #000000\n                .rotate(-12)\n                .darken(0.2)\n                .fade(0.5)}`\n                ,\n        },\n    },\n    media: {\n        height: 100\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    actionArea: {\n        padding:15,\n        transition: '0.2s',\n        '&:hover': {\n            transform: 'scale(1.1)',\n\n        },\n    },\n}));\n\nexport default function ImgMediaCard2(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    return (\n        <CardActionArea className={classes.actionArea} m={20}>\n            <Card\n                className={classes.card}\n                >\n               <Link to={props.card.route}>\n                   <CardMedia\n                       component=\"img\"\n                       alt={props.card.title}\n                       height=\"150\"\n                       src={props.card.img}\n                   />\n               </Link>\n                <CardHeader\n                    title={props.card.title}\n                    style={{backgroundColor:\"whitesmoke\"}}\n                    action={\n                        <IconButton\n                            className={clsx(classes.expand, {\n                                [classes.expandOpen]: expanded,\n                            })}\n                            onClick={handleExpandClick}\n                            aria-expanded={expanded}\n                            aria-label=\"show more\"\n                        >\n                            <ExpandMoreIcon />\n                        </IconButton>\n                    }\n                />\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent\n                        style={{backgroundColor:\"whitesmoke\"}}\n                    >\n                        <Typography>\n                            {props.card.description}\n                        </Typography>\n                    </CardContent>\n                </Collapse>\n            </Card>\n        </CardActionArea>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/sort.117e08fc.png\";","export default __webpack_public_path__ + \"static/media/binaryTree.6d8ce938.png\";","import React, {Component} from 'react';\nimport ImgMediaCard from \"./card\";\nimport ImgMediaCard2 from \"./card2\";\nimport \"./style.css\";\nimport {Link} from \"react-router-dom\";\nimport {getDetails} from \"./cardDetails\";\nimport TextField from \"@material-ui/core/TextField\";\nclass Cards extends Component {\n\n    state = {\n        cards:[],\n        filter:\"\"\n    }\n\n    componentDidMount() {\n        this.setState({cards:getDetails()});\n    }\n    getData = (e)=>{\n        console.log(e.target.value);\n        this.setState({filter:e.target.value});\n    }\n    render() {\n        return (\n           <React.Fragment>\n               <div className=\"d-flex justify-content-end Cards\">\n                   <TextField\n                       id=\"standard-basic\" label=\"Search\"\n                       color=\"secondary\"\n                       onChange={this.getData}\n                   />\n               </div>\n               <div className=\"d-flex flex-wrap justify-content-center Cards p-lg-5\" >\n                   {\n                       this.state.cards.filter((card) => card.title.toLowerCase().includes(this.state.filter.toLowerCase())||card.description.toLowerCase().includes(this.state.filter.toLowerCase())).map(card=>(\n                           <div>\n                               <ImgMediaCard2\n                                   className=\"d-flex flex-wrap\"\n                                   key={card.id}\n                                   card={card}/>\n                           </div>\n                       ))\n                   }\n\n               </div>\n           </React.Fragment>\n        );\n    }\n}\n\nexport default Cards;\n/*\n<div>\n   <ImgMediaCard2\n       className=\"d-flex flex-wrap\"\n       key={card.id}\n       card={card}/>\n</div>\n */","import graph from \"./images/graph.png\";\nimport sort from \"./sort.png\";\nimport binSearch from \"./images/binaryTree.png\";\nexport function getDetails(){\n   return [\n       {\n           id:1,\n           title:\"Pathfinder(Graph)\",\n           description:\"Visualize graph algorithms like dijkstra, BFS, DFS\",\n           route:\"/pathfinder\",\n           img:graph\n       },\n       {\n           id:2,\n           title:\"Iterative Sorting\",\n           description:\"Compare different sorting algorithms\",\n           route:\"/sort\",\n           img:sort\n       },\n       {\n           id:3,\n           title:\"Recursive Sorting\",\n           description:\"Compare different recursive sorting algorithms\",\n           route:\"/recursivesort\",\n           img:sort\n       },\n       {\n           id:4,\n           title:\"Binary Search\",\n           description:\"Binary search is an efficient algorithm for finding an item from a sorted list of item\",\n           route:\"/binarysearch\",\n           img:binSearch\n       }\n\n   ]\n}","import React, {Component} from 'react';\nimport GitHubButton from 'react-github-btn'\nimport \"./style.css\";\nclass Footer extends Component {\n    render() {\n        return (\n            <footer class=\"page-footer font-small special-color-dark pt-4 \"></footer>\n        );\n    }\n}\n\nexport default Footer;","import React, {Component} from 'react';\nimport Navbar from \"./navbar\";\nimport Greet from \"./greet\";\nimport Cards from \"./cards\";\nimport Footer from \"./footer\";\n\nclass Home extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar/>\n                <Greet/>\n                <Cards/>\n                <Footer/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport './style.css';\nclass Rect extends Component {\n\n    render() {\n        return (\n            <div\n                className='rect'\n                style={{height:this.props.rect.width,\n                    background:this.checkColor(),\n                    margin:this.props.marg,\n                    // float:'left',\n                    'vertical-align': 'middle'\n                }}\n            >\n                \n            </div>\n        );\n    }\n    checkColor = () => {\n        if( this.props.rect.isSorted ){\n            return \"green\";\n        } else if( this.props.rect.isSorting ){\n            return \"red\";\n        } else{\n            return \"black\"\n        }\n    }\n}\n\nexport default Rect;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\nimport FlipMove from 'react-flip-move';\n\nclass Rects extends Component {\n    render() {\n        let margin = 5;\n        if( this.props.rects.length>50 ){\n            margin=1;\n        }\n        return (\n            <div>\n                <FlipMove\n                    className=\"d-flex justify-content-center align-items-end\"\n                    duration={this.props.speed}\n                    // easing=\"cubic-bezier(.12,.36,.14,1.2)\"\n                >\n                {this.props.rects.map( (rect,rectidx)=>{\n                    return (\n                        <Rect\n                            marg={margin}\n                            key={rect.kk}\n                            rect={rect}\n                        />\n                    );\n                } )}\n                </FlipMove>\n            </div>\n        );\n    }\n}\n\nexport default Rects;","export function bubbleSort2(rects ){\n    const pairs = [];\n    const num  = rects.length;\n    const prevRect = rects.slice();\n\n    for( let i = 0; i<num; i++ ){\n        for( let j = i+1;j<num;j++ ){\n            if( prevRect[i].width>prevRect[j].width ){\n                const recti = {...prevRect[i]};\n                const rectj = {...prevRect[j]};\n                prevRect[j] = recti;\n                prevRect[i] = rectj;\n                pairs.push( {\n                    xx:i,\n                    yy:j,\n                    changed:true\n                } );\n            } else{\n                pairs.push( {\n                    xx:i,\n                    yy:j,\n                    changed:false\n                });\n            }\n            if( j === num-1 ){\n                pairs.push( {\n                    xx:i,\n                    yy:i,\n                    changed:false\n                });\n            }\n        }\n    }\n    return pairs;\n}\n\nexport function selectionSort(arr) {\n    const pairs = [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    // One by one move boundary of unsorted subarray\n    for (let i = 0; i < n-1; i++)\n    {\n        let min_idx = i;\n        for (let j = i+1; j < n; j++){\n            pairs.push( {\n                xx:min_idx,\n                yy:j,\n                changed:false\n            } );\n            if (prevRect[j].width < prevRect[min_idx].width){\n                min_idx = j;\n            }\n        }\n\n        // Swap the found minimum element with the first\n        // element\n        const recti = {...prevRect[i]};\n        const rectj = {...prevRect[min_idx]};\n        prevRect[min_idx] = recti;\n        prevRect[i] = rectj;\n        pairs.push( {\n            xx:min_idx,\n            yy:i,\n            changed:true\n        } );\n        pairs.push( {\n            xx:i,\n            yy:i,\n            changed:false\n        });\n    }\n    pairs.push({\n            xx:n-1,\n            yy:n-1,\n            changed:false\n        }\n    )\n    return pairs;\n}\n\nexport function bubbleSort(arr){\n    const pairs= [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    for (let i = 0; i < n-1; i++){\n        for (let j = 0; j < n-i-1; j++){\n            if (prevRect[j].width > prevRect[j+1].width) {\n                // swap arr[j+1] and arr[j]\n                const recti = {...prevRect[j]};\n                const rectj = {...prevRect[j+1]};\n                prevRect[j+1] = recti;\n                prevRect[j] = rectj;\n                pairs.push( {\n                    xx:j,\n                    yy:j+1,\n                    changed:true\n                } );\n            } else{\n                pairs.push( {\n                    xx:j,\n                    yy:j+1,\n                    changed:false\n                } );\n            }\n            if( j === n-i-2 ){\n                pairs.push( {\n                    xx:n-i-1,\n                    yy:n-i-1,\n                    changed:false\n                } );\n            }\n        }\n    }\n    pairs.push({\n            xx:0,\n            yy:0,\n            changed:false\n        }\n    )\n    return pairs;\n}\n\nexport function insertionSort(arr){\n    const pairs = [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    for (let i = 1; i < n; ++i) {\n        let key = prevRect[i].width;\n        let j = i - 1;\n\n        while (j >= 0 && prevRect[j].width > key) {\n            const recti = {...prevRect[j]};\n            const rectj = {...prevRect[j+1]};\n            prevRect[j+1] = recti;\n            prevRect[j] = rectj;\n            pairs.push( {\n                xx:j,\n                yy:j+1,\n                changed:true\n            } );\n            j = j - 1;\n        }\n       // arr[j + 1] = arr[i];\n    }\n    for(let i=0;i<n;i++){\n        pairs.push({\n            xx:i,\n            yy:i,\n            changed:true\n        })\n    }\n    return pairs;\n}","let values = [];\n\nexport function quickSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n    // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    quick(rects,0,sz);\n    for(var i=0;i<=sz;i++){\n        values.push({\n            xx:i,\n            yy:i,\n            changed:true\n        })\n    }\n    return values;\n}\n\n\nfunction getPartition(rects, left, right){\n    let pivot = rects[right].width\n    let it = left-1;\n    for(var j=left;j<=right-1;j++){\n        if( rects[j].width< pivot){\n            it++;\n            if( it!==j ){\n                // swap(rects[it],rects[j];\n                const rect1 = {...rects[it]};\n                const rect2 = {...rects[j]};\n                rects[it] = rect2;\n                rects[j] = rect1;\n                values.push({\n                    xx:it,\n                    yy:j,\n                    changed:true\n                })\n            }\n        }\n    }\n    if( it+1!==right ){\n        const rect1 = {...rects[it+1]};\n        const rect2 = {...rects[right]};\n        rects[it+1] = rect2;\n        rects[right] = rect1;\n        values.push({\n            xx:it+1,\n            yy:right,\n            changed:true\n        })\n    }\n    return it+1;\n}\nfunction quick(rects,left,right){\n    if( left>=right ) return ;\n    const partition = getPartition(rects,left,right);\n    quick(rects,left,partition-1);\n    quick(rects,partition+1,right);\n}","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Sorting Visualizer</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                            <span style={{color:\"white\"}}>\n                                Home\n                            </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onCountChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n               // marks={props.marks}\n                min={props.min}\n                max={props.max}\n                valueLabelDisplay=\"on\"\n                disabled={props.disable}\n            />\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n    const [state, setState] = React.useState({\n        pos: props.pos,\n    });\n    const handleChange = (event) => {\n        console.log(state.pos);\n        setAge(event.target.value);\n        props.onAlgoChanged(state.pos,event.target.value);\n    };\n\n    return (\n        <div className=\"ml-2 mr-2\">\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    <MenuItem value={0} style={{selected:true}} >Bubble Sort</MenuItem>\n                    <MenuItem value={1}>Selection Sort</MenuItem>\n                    <MenuItem value={2}>Insertion Sort</MenuItem>\n                    <MenuItem value={3}>Quick Sort</MenuItem>\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 300 + theme.spacing(3) * 2,\n    },\n    margin: {\n        height: theme.spacing(3),\n    },\n}));\n\nfunction ValueLabelComponent(props) {\n    const { children, open, value } = props;\n\n    return (\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n            {children}\n        </Tooltip>\n    );\n}\n\nValueLabelComponent.propTypes = {\n    children: PropTypes.element.isRequired,\n    open: PropTypes.bool.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\n\n\n\nconst AirbnbSlider = withStyles({\n    root: {\n        color: '#3a8589',\n        height: 3,\n        padding: '13px 0',\n    },\n    thumb: {\n        height: 27,\n        width: 27,\n        backgroundColor: '#fff',\n        border: '1px solid currentColor',\n        marginTop: -12,\n        marginLeft: -13,\n        boxShadow: '#ebebeb 0 2px 2px',\n        '&:focus, &:hover, &$active': {\n            boxShadow: '#ccc 0 2px 3px 1px',\n        },\n        '& .bar': {\n            // display: inline-block !important;\n            height: 9,\n            width: 1,\n            backgroundColor: 'currentColor',\n            marginLeft: 1,\n            marginRight: 1,\n        },\n    },\n    active: {},\n    track: {\n        height: 3,\n    },\n    rail: {\n        color: '#ffffff',\n        opacity: 1,\n        height: 3,\n    },\n})(Slider);\n\nfunction AirbnbThumbComponent(props) {\n    return (\n        <span {...props}>\n      <span className=\"bar\" />\n      <span className=\"bar\" />\n      <span className=\"bar\" />\n    </span>\n    );\n}\n\nexport default function CustomizedSlider() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography gutterBottom>Airbnb</Typography>\n            <AirbnbSlider\n                ThumbComponent={AirbnbThumbComponent}\n                getAriaLabel={(index) => (index === 0 ? 'Minimum price' : 'Maximum price')}\n                defaultValue={[20, 40]}\n                valueLabelDisplay=\"on\"\n            />\n        </div>\n    );\n}\n","import React from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\n\nconst CSlider = withStyles({\n    root: {\n       // color: \"#ffffff\",\n        height: 3,\n        padding: \"13px 0\",\n    },\n    track: {\n        height: 4,\n        borderRadius: 2,\n    },\n    thumb: {\n        backgroundColor: \"#fff\",\n        //color: \"#fff\",\n    },\n})(Slider);\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\n\nexport default function RangeSlider(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState([20, 37]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n\n    };\n    const handleCommit = (event, newValue) => {\n        console.log(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <CSlider\n                disabled={props.disable}\n                value={value}\n                onChange={handleChange}\n                onChangeCommitted={handleCommit}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={valuetext}\n                valueLabelDisplay=\"off\"\n            />\n            <Typography id=\"range-slider\" gutterBottom>\n                Value range\n            </Typography>\n        </div>\n    );\n}\n","import React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function SwitchLabels(props) {\n    const [state, setState] = React.useState({\n        checkedA: false,\n    });\n\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n        props.onDoubleChange(event.target.checked);\n    };\n\n    return (\n        <FormGroup row>\n            <FormControlLabel\n                control={<Switch checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\n                label=\"Duo\"\n                disabled={props.disable}\n            />\n\n        </FormGroup>\n    );\n}\n","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\nimport SimpleSelect from \"./simpleSelect\";\nimport CustomizedSlider from \"./airBnbSlider\";\nimport RangeSlider from \"./doubleSlider\";\nimport SwitchLabels from \"./formControlLabel\";\n\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n                <button\n                    className='btn btn-secondary m-2'\n                    onClick={this.props.onRandomize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Randomize\n                </button>\n\n                <RangeSlider\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={20}\n                    min={10}\n                    max={100}\n                    step={10}\n                    title=\"Numbers\"\n                    onCountChange={this.props.onCountChange}\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={50}\n                    min={10}\n                    max={100}\n                    step={1}\n                    title=\"Speed\"\n                    onCountChange={this.props.onSpeedChange}\n                    disable={false}\n                />\n                <SimpleSelect\n                    pos={0}\n                    onAlgoChanged={this.props.onAlgoChanged}\n                />\n                <SwitchLabels\n                    disable={this.props.disable}\n                    onDoubleChange={this.props.onDoubleChange}\n                />\n                <SimpleSelect\n                    pos={1}\n                    onAlgoChanged={this.props.onAlgoChanged}\n                />\n                <button\n                    className='btn btn-warning btn-lg '\n                    onClick={this.props.onViusalize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Visualize\n                </button>\n\n            </nav>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu;","import React, {Component} from 'react';\n\nimport Rects from \"./rects\";\nimport {bubbleSort,selectionSort,insertionSort} from \"../algorithms/sortingAlgorithms\";\nimport {quickSort} from \"../algorithms/quickSort\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\n\nclass Sort extends Component {\n  state = {\n      count:20,\n      rects: [],\n      rects2: [],\n      doubles:false,\n      speed:50,\n      isRunning:false,\n      isRunning1:false,\n      isRunning2:false,\n      algo1:0,\n      algo2:0\n  }\n\n  componentDidMount() {\n      const rect = getInitialRects(this.state.count);\n      const rect2 = rect.slice();\n      this.setState({rects:rect,rects2:rect2});\n  }\n\n    render() {\n    return (\n        <React.Fragment>\n            <Navbar/>\n            <Menu\n                disable={this.state.isRunning}\n                onDoubleChange={this.handleDouble}\n                onViusalize={this.handleSort}\n                onRandomize={this.handleRandomize}\n                onRefresh={this.handleRefresh}\n                onCountChange={this.handleCountChange}\n                onAlgoChanged={this.handleAlgoChanged}\n                onSpeedChange={this.handleSpeedChanged}\n            />\n            <div className=' justify-content-center'>\n\n                <Rects\n                    speed={this.state.speed}\n                    rects={this.state.rects}\n                />\n                { this.state.doubles && <hr style={{width:\"90%\"}}/>}\n                { this.state.doubles &&\n                <Rects\n                    rects={this.state.rects2}\n                /> }\n            </div>\n        </React.Fragment>\n    );\n  }\n  handleRandomize = () => {\n      const rect = getInitialRects(this.state.count);\n      const rect2 = rect.slice();\n      this.setState({rects:rect,rects2:rect2});\n  }\n  handleRefresh = () =>{\n      const rects = this.state.rects;\n      for(let i=0;i<rects.length;i++){\n          const rect = {...rects[i],isSorted:false, isSorting:false}\n          rects[i] = rect;\n      }\n      const rects2 = rects.slice();\n      this.setState({rects,rects2});\n  }\n\n  handleDouble = (val) =>{\n      this.setState({doubles:val});\n  }\n  handleCountChange = (val) => {\n      this.setState({count:val});\n      this.handleRandomize();\n  }\n  handleAlgoChanged = (pos,val) =>{\n      if( pos === 0 ){\n          this.setState({algo1:val});\n      } else{\n          this.setState({algo2:val});\n      }\n  }\n  handleSpeedChanged = (val) =>{\n    const speed = (760-val*7.5);\n    this.setState({speed});\n  }\n  handleSort = () =>{\n\n      this.setState({isRunning:true});\n      let steps1;\n      switch (this.state.algo1){\n          case 0:\n              steps1 = bubbleSort(this.state.rects);\n              break;\n          case 1:\n              steps1 = selectionSort(this.state.rects);\n              break;\n          case 2:\n              steps1 = insertionSort(this.state.rects);\n              break;\n          case 3:\n              steps1 = quickSort(this.state.rects2);\n              console.log(steps1)\n              break;\n          default:\n              steps1 = bubbleSort(this.state.rects);\n              break;\n      }\n      let steps2;\n      if( this.state.doubles ){\n\n          switch (this.state.algo2){\n              case 0:\n                  steps2 = bubbleSort(this.state.rects2);\n                  break;\n              case 1:\n                  steps2 = selectionSort(this.state.rects2);\n                  break;\n              case 2:\n                  steps2 = insertionSort(this.state.rects2);\n                  break;\n              case 3:\n                  steps2 = quickSort(this.state.rects2);\n                  break;\n              default:\n                  steps2 = bubbleSort(this.state.rects2);\n                  break;\n          }\n\n      }\n      this.handleFirst(steps1);\n      if( this.state.doubles ) this.handleSecond(steps2);\n  }\n  handleFirst = async (steps) =>{\n     // console.log(\"fsdfsdfsdfasdf\");\n      this.setState({isRunning1:true});\n\n     // const steps = bubbleSort(this.state.rects);\n    //  console.log(steps.length);\n      const prevRect = this.state.rects;\n      for(let i = 0;i<steps.length;i++){\n       //   setTimeout(()=>{\n              if( i!==0 ){\n                  prevRect[steps[i-1].xx] = { ...prevRect[steps[i-1].xx],isSorting:false };\n                  prevRect[steps[i-1].yy] = { ...prevRect[steps[i-1].yy],isSorting:false };\n              }\n              if(steps[i].xx===steps[i].yy){\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorted:true,isSorting:false};\n              }else if( steps[i].changed ){\n                  const recti = {...prevRect[steps[i].xx],isSorting:true};\n                  const rectj = {...prevRect[steps[i].yy],isSorting:true};\n                  prevRect[steps[i].yy] = recti;\n                  prevRect[steps[i].xx] = rectj;\n              } else{\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:true};\n                  prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:true};\n              }\n              if(i === steps.length-1){\n                  this.setState({isRunning1:false});\n                  if( this.state.isRunning2 === false ){\n                      this.setState({isRunning:false});\n                  }\n              }\n             /* if( i === (steps.length)-2 ){\n                  this.setState({isRunning1:false});\n                  if( this.state.isRunning2 === false ){\n                      this.setState({isRunning:false});\n                  }\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                  prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n              }*/\n              this.setState({rects:prevRect});\n              await sleep(this.state.speed);\n         // },i*speed);\n      }\n  }\n    handleSecond = async (steps) =>{\n        this.setState({isRunning2:true});\n        const prevRect = this.state.rects2;\n        for(let i = 0;i<steps.length;i++){\n         //   setTimeout(()=>{\n                if( i!==0 ){\n                    prevRect[steps[i-1].xx] = { ...prevRect[steps[i-1].xx],isSorting:false };\n                    prevRect[steps[i-1].yy] = { ...prevRect[steps[i-1].yy],isSorting:false };\n                }\n                if(steps[i].xx===steps[i].yy){\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorted:true,isSorting:false};\n                }else if( steps[i].changed ){\n                    const recti = {...prevRect[steps[i].xx],isSorting:true};\n                    const rectj = {...prevRect[steps[i].yy],isSorting:true};\n                    prevRect[steps[i].yy] = recti;\n                    prevRect[steps[i].xx] = rectj;\n                } else{\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:true};\n                    prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:true};\n                }\n                if( i === steps.length-1 ){\n                    this.setState({isRunning2:false});\n                    if( this.state.isRunning1 === false ){\n                        this.setState({isRunning:false});\n                    }\n                }\n               /* if( i === (steps.length)-2 ){\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                    prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n                    this.setState({isRunning2:false});\n                    if( this.state.isRunning1 === false ){\n                        this.setState({isRunning:false});\n                    }\n                }*/\n                this.setState({rects2:prevRect});\n                await sleep(this.state.speed);\n           // },i*speed);\n        }\n    }\n\n\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nconst getInitialRects = (tot) => {\n    const rects = [];\n    for(let i = 0;i<tot;i++){\n        rects.push(getRect(i));\n    }\n    return rects;\n}\nconst getRect = (kk) => {\n  return {\n      width: Math.floor(Math.random() * 200)+50,\n      isSorted:false,\n      isSorting:false,\n      kk:kk\n  }\n}\nexport default Sort;\n","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\n\n\nclass EntryPoint extends Component {\n    state={\n        error:false\n    }\n    render() {\n        return (\n            <div>\n                <TextField\n                    error={this.state.error}\n                    id=\"standard-error-helper-text\"\n                    label=\"Upper Number\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    onChange={this.getData}\n                /> <br /><br />\n                <h1>\n                    Guess a number between 0 and {this.props.upper}\n                </h1>\n                <br />\n                <button\n                    className='btn btn-warning btn-lg'\n                    onClick={this.props.startGame}\n                >\n                    Start the game\n                </button>\n            </div>\n        );\n    }\n    getData = (e)=>{\n        if( e.target.value!== \"\" ){\n            console.log(e.target.value);\n            this.props.setUpper(e.target.value);\n        }\n        else{\n            this.props.setUpper(100)\n        }\n    }\n    validateNumbers = () =>{\n\n    }\n}\n\nexport default EntryPoint;","import React, {useEffect} from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 400,\n    },\n});\n\n\nconst CSlider = withStyles({\n    root: {\n       // color: \"#ffffff\",\n        height: 3,\n        width: 400,\n        padding: \"13px 0\",\n    },\n    track: {\n        height: 4,\n        borderRadius: 2,\n    },\n    thumb: {\n        backgroundColor: \"#fff\",\n        //color: \"#fff\",\n    },\n})(Slider);\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\n\nexport default function RangeSlider(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState([props.lower, props.upper]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n\n    };\n    const handleCommit = (event, newValue) => {\n        console.log(newValue);\n    };\n    useEffect(()=>{\n        setValue([props.lower,props.upper]);\n    },[props.lower,props.upper])\n    return (\n        <div className={classes.root}>\n            <CSlider\n                disabled\n                value={value}\n                onChange={handleChange}\n                onChangeCommitted={handleCommit}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={valuetext}\n                valueLabelDisplay=\"on\"\n                max={props.max}\n            />\n            <Typography id=\"range-slider\" gutterBottom>\n                Binary Search\n            </Typography>\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport RangeSlider from \"./doubleSlider\";\n\nclass Guess extends Component {\n    render() {\n        return (\n            <div >\n\n                <p>\n\n                    <button className=\"btn btn-secondary btn-lg\" type=\"button\" data-toggle=\"collapse\"\n                            data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                        Toggle Range\n                    </button>\n                </p>\n                <div className=\"collapse\" id=\"collapseExample\">\n                    <div className=\"card card-body\">\n                        <center style={{justifyContent:\"center\"}}>\n                            <RangeSlider\n                                upper={this.props.upper}\n                                lower={this.props.lower}\n                                max={this.props.max}\n                            />\n                        </center>\n                    </div>\n                </div>\n\n               <h1>\n                    Is you number greater than {this.getMid()}?\n                </h1> <br />\n                <button\n                    className='btn btn-lg btn-success m-2'\n                    onClick={this.props.yesButton}\n                >Yes</button>\n                <button\n                    className='btn btn-lg btn-danger m-2'\n                    onClick={this.props.noButton}\n                >No</button> <br/>\n            </div>\n        );\n    }\n    getMid = () => {\n        const mid = Math.floor( (this.props.upper+this.props.lower)/2);\n        return mid;\n    }\n}\n\nexport default Guess;","import React, {Component} from 'react';\n\nclass Result extends Component {\n    render() {\n        return (\n            <div>\n                <span className='display-3'>\n                    Your number is {this.props.res}\n                </span> <br />\n                <button\n                    className='btn btn-warning btn-lg'\n                    onClick={this.props.onRestart}\n                >\n                    Restart\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default Result;","import React, {Component} from 'react';\nimport Guess from \"./guess\";\nimport Result from \"./result\";\n\nclass Search extends Component {\n    render() {\n        return (\n            <div>\n                {this.props.upper !== this.props.lower &&\n                <Guess\n                    yesButton={this.props.yesButton}\n                    noButton={this.props.noButton}\n                    upper={this.props.upper}\n                    lower={this.props.lower}\n                    max={this.props.max}\n                />\n                }\n                {this.props.upper === this.props.lower &&\n                   <Result\n                       res={this.props.upper}\n                       onRestart={this.props.onRestart}\n                   />\n                }\n            </div>\n        );\n    }\n\n}\n\nexport default Search;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Binary Search Game</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\nimport EntryPoint from \"./entryPoint\";\nimport Search from \"./search\";\nimport Navbar from \"./navbar\";\n\nclass BinarySearch extends Component {\n    state={\n        upper:100,\n        lower:0,\n        max:100,\n        isRunning:false\n    }\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <br />\n                <br />\n                <br />\n            <center>\n                {!this.state.isRunning &&\n                <EntryPoint\n                    startGame={this.handleStartGame}\n                    upper={this.state.upper}\n                    setUpper={this.handleSetUpper}\n                /> }\n                {this.state.isRunning &&\n                <Search\n                    yesButton={this.handleYes}\n                    noButton={this.handleNo}\n                    upper={this.state.upper}\n                    lower={this.state.lower}\n                    max={this.state.max}\n                    onRestart={this.handleRestart}\n                />\n                }\n            </center>\n            </div>\n        );\n    }\n    handleStartGame = () =>{\n        this.setState({isRunning:true});\n    }\n    handleRestart = () =>{\n        this.setState({isRunning:false,upper:100,lower:0});\n    }\n    handleYes = () =>{\n        const mid = Math.floor( (this.state.upper+this.state.lower)/2);\n        this.setState({lower:mid+1});\n    }\n    handleNo = () =>{\n        const mid = Math.floor( (this.state.upper+this.state.lower)/2);\n        this.setState({upper:mid});\n    }\n    handleSetUpper = (up) =>{\n        let val = parseInt(up);\n        if( val<=0 ){\n            val = 100;\n        }\n        this.setState({upper:val,max:val});\n    }\n}\n\nexport default BinarySearch;","import React, {Component} from 'react';\nimport './style.css';\nclass Rect extends Component {\n\n    render() {\n        return (\n            <div\n                className='rect'\n                style={{height:this.props.rect.width,\n                    border: this.checkBorder(),\n                    background:this.checkColor(),\n                    margin:this.props.marg\n\n\n                }}\n            >\n                \n            </div>\n        );\n    }\n    checkColor = () => {\n        if( this.props.rect.isSorted ){\n            return \"green\";\n        } else if( this.props.rect.isSorting ){\n            return \"orange\";\n        } else if( this.props.rect.isLeft ){\n            return \"red\";\n        } else if(this.props.rect.isRight){\n            return \"purple\";\n        }else{\n            return \"#ADD8E6\";\n        }\n    }\n    checkBorder = () =>{\n        if( this.props.rect.isRange ){\n            return \"0px solid black\";\n        } else{\n            return \"0px\"\n        }\n    }\n}\n\nexport default Rect;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\n\nclass Rects extends Component {\n    render() {\n        let margin = 5;\n        if( this.props.rects.length>50 ){\n            margin=1;\n        }\n        return (\n            <div className=\"d-flex justify-content-center align-items-end\">\n                {this.props.rects.map( (rect,rectidx)=>{\n                    return (\n                        <Rect\n                            marg={margin}\n                            key={rectidx}\n                            rect={rect}\n                        />\n                    );\n                } )}\n            </div>\n        );\n    }\n}\n\nexport default Rects;","let values = [];\nexport default function mergeSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n   // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    mergeS(rects,0,sz);\n    return values;\n}\n\nfunction merge(rects, l, m, r){\n  //  console.log(l,\" \",r);\n    let n1 = m-l+1;\n    let n2 = r-m;\n\n    const L = rects.slice(l, m+1);\n    const R = rects.slice(m+1,r+1);\n    let i = 0;\n    let j = 0;\n    let k = l;\n    while(i<n1 && j<n2){\n        if( L[i].width <= R[j].width ){\n            rects[k] = L[i];\n            i++;\n        } else{\n            rects[k] = R[j];\n            j++;\n        }\n        k++;\n    }\n    while (i < n1) {\n        rects[k] = L[i];\n        i++;\n        k++;\n    }\n    while (j < n2) {\n        rects[k] = R[j];\n        j++;\n        k++;\n    }\n\n}\n\nfunction mergeS(rects,l,r){\n\n    if( l>=r ) return;\n    let m = l+ (r-l)/2;\n    m = Math.floor(m);\n   // console.log(\"iiiiiiiiiiiiiiiiiiiiiiiii \",m);\n    mergeS(rects,l,m);\n    mergeS(rects,m+1,r);\n    merge(rects,l,m,r);\n    let rectsCopy = rects.slice(l,r+1);\n    let value = {\n        left:l,\n        right:r,\n        mid:m,\n        val:rectsCopy\n    }\n    values.push(value);\n}","let values = [];\nexport default function HeapSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n   // sz = sz-1;\n    heapSort(rects,sz);\n    return values;\n}\nfunction heapify(rects,n,i){\n    let largest = i; // Initialize largest as root\n    let l = 2 * i + 1; // left = 2*i + 1\n    let r = 2 * i + 2; // right = 2*i + 2\n\n    // If left child is larger than root\n    if (l < n && rects[l].width > rects[largest].width)\n        largest = l;\n\n    // If right child is larger than largest so far\n    if (r < n && rects[r].width > rects[largest].width)\n        largest = r;\n\n    // If largest is not root\n    if (largest != i) {\n        let temp = rects[i];\n        rects[i] = rects[largest];\n        rects[largest] = temp;\n        let value = {\n            left:i,\n            right:largest,\n            sorted: false\n        }\n        values.push(value);\n        // Recursively heapify the affected sub-tree\n        heapify(rects, n, largest);\n    }\n}\nfunction heapSort(rects,n){\n    for(let i = Math.floor(n/2)-1;i>=0;i--){\n      //  console.log(\"heap \",n,\" \",i);\n        heapify(rects,n,i);\n    }\n    for (let i = n-1 ; i > 0; i--) {\n        // Move current root to end\n        let temp = rects[i];\n        rects[i] = rects[0];\n        rects[0] = temp;\n        let value = {\n            left:i,\n            right:0,\n            sorted:true\n        }\n        values.push(value);\n        // call max heapify on the reduced heap\n        heapify(rects, i, 0);\n    }\n}\n","let values = [];\n\nexport function quickSortRecursive(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n    // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    quick(rects,0,sz);\n    return values;\n}\n\n\nfunction getPartition(rects, left, right){\n    values.push({\n        left,\n        right,\n        swap:false,\n        changedRange:true,\n    })\n    let pivot = rects[right].width\n    let it = left-1;\n    for(var j=left;j<=right-1;j++){\n        if( rects[j].width< pivot){\n            it++;\n            if( it!==j ){\n                // swap(rects[it],rects[j];\n                const rect1 = {...rects[it]};\n                const rect2 = {...rects[j]};\n                rects[it] = rect2;\n                rects[j] = rect1;\n                values.push({\n                    left:it,\n                    right:j,\n                    swap:true,\n                    changedRange:false,\n                })\n            }\n        }\n    }\n    if( it+1!==right ){\n        const rect1 = {...rects[it+1]};\n        const rect2 = {...rects[right]};\n        rects[it+1] = rect2;\n        rects[right] = rect1;\n        values.push({\n            left:it+1,\n            right:right,\n            swap:true,\n            changedRange:false,\n        })\n    }\n    return it+1;\n}\nfunction quick(rects,left,right){\n    if( left>=right ) return ;\n    const partition = getPartition(rects,left,right);\n    quick(rects,left,partition-1);\n    quick(rects,partition+1,right);\n}","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Recursive Sorting Visualizer</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                            <span style={{color:\"white\"}}>\n                                Home\n                            </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onCountChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n               // marks={props.marks}\n                min={props.min}\n                max={props.max}\n                valueLabelDisplay=\"on\"\n                disabled={props.disable}\n            />\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n    const [state, setState] = React.useState({\n        pos: props.pos,\n    });\n    const handleChange = (event) => {\n        console.log(state.pos);\n        setAge(event.target.value);\n        props.onAlgoChanged(state.pos,event.target.value);\n    };\n\n    return (\n        <div className=\"ml-2 mr-2\">\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    <MenuItem value={0} style={{selected:true}} >Merge Sort</MenuItem>\n                    <MenuItem value={1} style={{selected:true}} >Heap Sort</MenuItem>\n                    <MenuItem value={2} style={{selected:true}} >Quick Sort</MenuItem>\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 300 + theme.spacing(3) * 2,\n    },\n    margin: {\n        height: theme.spacing(3),\n    },\n}));\n\nfunction ValueLabelComponent(props) {\n    const { children, open, value } = props;\n\n    return (\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n            {children}\n        </Tooltip>\n    );\n}\n\nValueLabelComponent.propTypes = {\n    children: PropTypes.element.isRequired,\n    open: PropTypes.bool.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\n\n\n\nconst AirbnbSlider = withStyles({\n    root: {\n        color: '#3a8589',\n        height: 3,\n        padding: '13px 0',\n    },\n    thumb: {\n        height: 27,\n        width: 27,\n        backgroundColor: '#fff',\n        border: '1px solid currentColor',\n        marginTop: -12,\n        marginLeft: -13,\n        boxShadow: '#ebebeb 0 2px 2px',\n        '&:focus, &:hover, &$active': {\n            boxShadow: '#ccc 0 2px 3px 1px',\n        },\n        '& .bar': {\n            // display: inline-block !important;\n            height: 9,\n            width: 1,\n            backgroundColor: 'currentColor',\n            marginLeft: 1,\n            marginRight: 1,\n        },\n    },\n    active: {},\n    track: {\n        height: 3,\n    },\n    rail: {\n        color: '#ffffff',\n        opacity: 1,\n        height: 3,\n    },\n})(Slider);\n\nfunction AirbnbThumbComponent(props) {\n    return (\n        <span {...props}>\n      <span className=\"bar\" />\n      <span className=\"bar\" />\n      <span className=\"bar\" />\n    </span>\n    );\n}\n\nexport default function CustomizedSlider() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography gutterBottom>Airbnb</Typography>\n            <AirbnbSlider\n                ThumbComponent={AirbnbThumbComponent}\n                getAriaLabel={(index) => (index === 0 ? 'Minimum price' : 'Maximum price')}\n                defaultValue={[20, 40]}\n                valueLabelDisplay=\"on\"\n            />\n        </div>\n    );\n}\n","import React from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\n\nconst CSlider = withStyles({\n    root: {\n       // color: \"#ffffff\",\n        height: 3,\n        padding: \"13px 0\",\n    },\n    track: {\n        height: 4,\n        borderRadius: 2,\n    },\n    thumb: {\n        backgroundColor: \"#fff\",\n        //color: \"#fff\",\n    },\n})(Slider);\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\n\nexport default function RangeSlider(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState([20, 37]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n\n    };\n    const handleCommit = (event, newValue) => {\n        console.log(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <CSlider\n                disabled={props.disable}\n                value={value}\n                onChange={handleChange}\n                onChangeCommitted={handleCommit}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={valuetext}\n                valueLabelDisplay=\"off\"\n            />\n            <Typography id=\"range-slider\" gutterBottom>\n                Value range\n            </Typography>\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\nimport SimpleSelect from \"./simpleSelect\";\nimport CustomizedSlider from \"./airBnbSlider\";\nimport RangeSlider from \"./doubleSlider\";\nimport SwitchLabels from \"./formControlLabel\";\n\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n                <button\n                    className='btn btn-secondary m-2'\n                    onClick={this.props.onRandomize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Randomize\n                </button>\n\n                <RangeSlider\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={20}\n                    min={10}\n                    max={100}\n                    step={10}\n                    title=\"Numbers\"\n                    onCountChange={this.props.onCountChange}\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={50}\n                    min={10}\n                    max={100}\n                    step={1}\n                    title=\"Speed\"\n                    onCountChange={this.props.onSpeedChange}\n                    disable={false}\n                />\n                <SimpleSelect\n                    pos={0}\n                    onAlgoChanged={this.props.onAlgoChanged}\n                />\n                <button\n                    className='btn btn-warning btn-lg '\n                    onClick={this.props.onViusalize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Visualize\n                </button>\n\n            </nav>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\nimport Rects from \"./rects\";\nimport mergeSort from '../algorithms/mergeSort';\nimport heapSort from \"../algorithms/heapSort\";\nimport {quickSortRecursive} from \"../algorithms/quickSortRecursive\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\n\nclass RecursiveSort extends Component {\n    state = {\n        count: 20,\n        rects: [],\n        speed: 50,\n        isRunning: false,\n        algo: 0\n    }\n\n    constructor() {\n        super();\n    }\n\n    componentDidMount() {\n        var rects = getInitialRects(this.state.count);\n        this.setState({rects});\n        /* var rects2 = rects.slice();\n         console.log(rects2);\n         rects = mergeSort(rects);\n         console.log(rects);*/\n\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar/>\n                <Menu\n                    disable={this.state.isRunning}\n                    onViusalize={this.handleSort}\n                    onRandomize={this.handleRandomize}\n                    onRefresh={this.handleRefresh}\n                    onCountChange={this.handleCountChange}\n                    onAlgoChanged={this.handleAlgoChanged}\n                    onSpeedChange={this.handleSpeedChanged}\n                />\n                <div className=' justify-content-center'>\n                    <Rects\n                        rects={this.state.rects}\n                    />\n\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    handleRandomize = () => {\n        const rect = getInitialRects(this.state.count);\n        this.setState({rects: rect});\n    }\n    handleRefresh = () => {\n        const rects = this.state.rects;\n        for (let i = 0; i < rects.length; i++) {\n            const rect = {...rects[i], isSorted: false, isSorting: false}\n            rects[i] = rect;\n        }\n        this.setState({rects});\n    }\n    handleCountChange = (val) => {\n        this.setState({count: val});\n        this.handleRandomize();\n    }\n    handleAlgoChanged = (pos, val) => {\n        if (pos === 0) {\n            // console.log(\"sup 0\");\n            this.setState({algo: val});\n        }\n    }\n    handleSpeedChanged = (val) => {\n        const speed = (110 - val);\n        this.setState({speed});\n    }\n\n    handleSort = () => {\n\n        this.setState({isRunning: true});\n        let steps;\n        let rects2;\n        switch (this.state.algo) {\n\n            case 0:\n                steps = mergeSort(this.state.rects);\n                this.handleMerge(steps);\n                break;\n            case 1:\n                rects2 = this.state.rects.slice();\n                steps = heapSort(rects2);\n                this.handleHeap(steps);\n                break;\n            case 2:\n                rects2 = this.state.rects.slice();\n                steps = quickSortRecursive(rects2);\n                this.handleQuick(steps);\n                break;\n            default:\n        }\n\n\n    }\n\n    handleQuick = async (steps) =>{\n        this.setState({isRunning: true});\n        let prevRect = this.state.rects;\n        for (let j = 0; j < this.state.count; j++) {\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\n        }\n        this.setState({rects: prevRect});\n        let hasChanged = -1;\n        let changed;\n        for(let i=0;i<steps.length;i++){\n            let step = steps[i];\n            if( hasChanged!==-1 ){\n                let {left,right} = changed;\n                prevRect[left] = {...prevRect[left], isLeft: false,isSorting: false,isRight:false,isRange:false};\n                prevRect[right] = {...prevRect[right], isLeft: false,isSorting: false,isRight:false,isRange:false};\n            }\n            if( step.changedRange ){\n                await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n                let {left,right} = step;\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false};\n                }\n                for (let j = left; j <=right; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:true,isRange:true};\n                }\n                this.setState({rects: prevRect});\n                await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false};\n                }\n            }else if(step.swap){\n                let {left,right} = step;\n                prevRect[left] = {...prevRect[left], isLeft: false,isSorting: true,isRight:false,isRange:false};\n                prevRect[right] = {...prevRect[right], isLeft: true,isSorting: false,isRight:false,isRange:false};\n                let temp = prevRect[left];\n                prevRect[left] = prevRect[right];\n                prevRect[right] = temp;\n                hasChanged = 1;\n                changed = step;\n            }\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);\n            if (i === steps.length - 1) {\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isSorted: false,isRange:false};\n                }\n                this.setState({rects: prevRect});\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isSorted: true,isRange:false};\n                    this.setState({rects: prevRect});\n                    await sleep(10);\n                }\n                this.setState({isRunning: false,rects: prevRect});\n            }\n        }\n    }\n    handleHeap = async (steps) =>{\n        this.setState({isRunning: true});\n        let prevRect = this.state.rects;\n        for (let j = 0; j < this.state.count; j++) {\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\n        }\n        this.setState({rects: prevRect});\n\n        for(let i = 0;i<steps.length;i++){\n            let step = steps[i];\n            //   console.log(step);\n            for (let i = 0; i < this.state.count; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false};\n            }\n            let {left,right,sorted} = step;\n            prevRect[left] = {...prevRect[left],isLeft:true};\n            prevRect[right] = {...prevRect[right],isRight:true};\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);\n            let temp = prevRect[left];\n            prevRect[left] = prevRect[right];\n            prevRect[right] = temp;\n            this.setState({rects: prevRect});\n            if( sorted ) prevRect[left] = {...prevRect[left],isSorted: true};\n            await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n            if (i === steps.length - 1) {\n\n                for (let i = 0; i < this.state.count; i++) {\n                    prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: true};\n                    this.setState({rects: prevRect});\n                    await sleep(this.state.speed);\n                }\n                this.setState({isRunning: false,rects: prevRect});\n            }\n        }\n    }\n    handleMerge = async (steps) => {\n        this.setState({isRunning1: true});\n\n        const {speed} = this.state;\n\n        let prevRect = this.state.rects;\n        for (let j = 0; j < this.state.count; j++) {\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\n        }\n        this.setState({rects: prevRect});\n        await sleep(this.state.speed);\n      //  console.log(\"steps \", steps.length);\n        for (let ii = 0; ii < steps.length; ii++) {\n            let step = steps[ii];\n            for (let i = 0; i < this.state.count; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false};\n            }\n           // console.log(step.left,\" \",step.mid,\" \",step.right);\n            for (let i = step.left; i <= step.mid; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: true,isSorting: false};\n            }\n            for (let i = step.mid + 1; i <= step.right; i++) {\n                prevRect[i] = {...prevRect[i], isRight: true,isLeft:false,isSorting: false};\n            }\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n          //  console.log(step);\n            for(let i= step.left;i<=step.right;i++){\n                prevRect[i] = {...prevRect[i],width:step.val[i-step.left].width,isSorting: true };\n                this.setState({rects: prevRect});\n                await sleep(this.state.speed);\n            }\n\n            if (ii === steps.length - 1) {\n\n                for (let i = 0; i < this.state.count; i++) {\n                    prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: true};\n                    this.setState({rects: prevRect});\n                    await sleep(this.state.speed);\n                }\n                this.setState({isRunning: false});\n            }\n\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);\n            prevRect = this.state.rects;\n          /*  for (let i = 0; i < this.state.count; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: false};\n            }*/\n            this.setState({rects: prevRect});\n        }\n    }\n\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nconst getInitialRects = (tot) => {\n    const rects = [];\n    for (let i = 0; i < tot; i++) {\n        rects.push(getRect());\n    }\n    return rects;\n}\nconst getRect = () => {\n    return {\n        width: Math.floor(Math.random() * 200) + 50,\n        isSorted: false,\n        isSorting: false,\n        isLeft: false,\n        isRight: false\n    }\n}\n\nexport default RecursiveSort;","import React, {Component} from 'react';\n\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\nimport Pathfinder from \"./pathfinderComponents/pathfinder\";\nimport Home from \"./homeComponents/home\";\nimport Sort from \"./sortComponents/sort\";\nimport BinarySearch from \"./binarySearchComponent/binarySearch\";\nimport RecursiveSort from \"./recursiveSortComponents/recursiveSort\";\n\n\n\nclass App extends Component {\n\n    constructor() {\n        super();\n    }\n    componentDidMount() {\n        // console.log(window.innerHeight,\"  \",window.innerWidth);\n    }\n\n    render() {\n        return (\n            <Router basename='/'>\n                <Switch>\n                    <Route path='/pathfinder'  component={Pathfinder}/>\n                    <Route path='/sort' component={Sort}/>\n                    <Route path='/binarysearch' component={BinarySearch}/>\n                    <Route path='/recursivesort' component={RecursiveSort}/>\n                    <Route path='/' component={Home}/>\n\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}